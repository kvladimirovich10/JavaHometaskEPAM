package hometask4.task1;import java.io.*;import java.util.ArrayList;public class Service {    static ArrayList<String> readKeyWords(String fileName) {        ArrayList<String> keyWords = new ArrayList<>();        try {            FileInputStream fileInputStream = new FileInputStream(fileName);            int n;            StringBuilder localStringBuilder = new StringBuilder();            while ((n = fileInputStream.read()) != -1) {                if ((char) n != ';')                    localStringBuilder.append((char) n);                if ((char) n == ';') {                    keyWords.add(localStringBuilder.toString());                    localStringBuilder = new StringBuilder();                }            }            fileInputStream.close();        } catch (IOException e) {            e.printStackTrace();        }        return keyWords;    }    static ArrayList<String> readCode(String fileName) {        ArrayList<String> code = new ArrayList<>();        try {            FileInputStream fileInputStream = new FileInputStream(fileName);            int n;            StringBuilder localStringBuilder = new StringBuilder();            while ((n = fileInputStream.read()) != -1) {                if ((char) n != ' ') {                    localStringBuilder.append((char) n);                    if ((char) n == ';' || (char) n == '{' || (char) n == '}') {                        if (localStringBuilder.length() > 2)                            code.add(localStringBuilder.toString());                        localStringBuilder = new StringBuilder();                    }                }            }            fileInputStream.close();        } catch (IOException e) {            e.printStackTrace();        }        return code;    }    static Integer[] matcher(ArrayList<String> keyWords,                             ArrayList<String> code) {        Integer[] matches = new Integer[keyWords.size()];        for (int i = 0 ; i < matches.length ; i++) {            matches[i] = 0;        }        for (int j = 0 ; j < keyWords.size() ; j++) {            int counter = 0;            CharSequence charSequence = keyWords.get(j);            for (int i = 0 ; i < code.size() ; i++) {                if (code.get(i).contains(charSequence))                    counter++;            }            matches[j] = counter;        }        return matches;    }    static void writeResult(String fileName,                            ArrayList<String> keyWords,                            Integer[] matches) {        try {            OutputStream fileOutputStream = new FileOutputStream(fileName);            for (int i = 0 ; i < keyWords.size() ; i++) {                String output = keyWords.get(i) + " " + matches[i].toString();                byte[] bytes = output.getBytes();                fileOutputStream.write(bytes);            }        } catch (IOException e) {            e.printStackTrace();        }    }    static void printer(ArrayList<?> arrayList) {        for (Object o : arrayList) {            System.out.println(o);        }    }}