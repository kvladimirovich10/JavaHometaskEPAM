package task2;import java.io.BufferedReader;import java.io.IOException;import java.util.List;public class OfficeService {    static void addEmpl(Office office, Employee employee) {        office.getEmplList().add(employee);    }    static int generateId() {        return 0;    }    /**     * Method prints to a console all the stored notes in the note list     * @param employees - note list     * @return 0 if there is no notes in the notebook , 1 if it is not     * @throws IOException for BufferedReader     */    static int printEmployeeList(List<Employee> employees) throws IOException {        int i = 1;        if (employees.size() == 0) {            System.out.format("%n* no employees are added yet%n");            return 0;        } else {            for (Employee employee : employees) {                System.out.println(i++ + " '" + employee.getEmplId());            }        }        return 1;    }    /**     * Method selects a note from a note list by index from a console and calls method printNote     * @param employees - note list     * @param reader - object of a class BufferedReader to read from a console     * @throws IOException for BufferedReader     */    static void chooseEmployee(List<Employee> employees, BufferedReader reader) throws IOException {        System.out.format("%n* type the employee ID to look through his or her item list | 0 - back to the menu%n");        int i = enterInt(reader);        if (i == 0)            return;        while (i < 0 || i > employees.size()) {            System.out.format("%n* can't find this employee, try again!%n");            i = Integer.parseInt(reader.readLine());        }        WorkDeskService.printStationaryList(employees.get(i));    }    /**     * Method reads a String from a console, tries to parse to int by calling method isInteger()     * @param reader - object of a class BufferedReader to read from a console     * @return parsed int from a String     * @throws IOException for BufferedReader     */    static int enterInt(BufferedReader reader) throws IOException {        String readLine = reader.readLine();        while (!isInteger(readLine)) {            System.out.println("Enter a valid number!");            readLine = reader.readLine();        }        return Integer.parseInt(readLine);    }    /**     * Method checks if a string can be parsed to int     * @param s - String to parse to int     * @return True if int, False if not     */    private static boolean isInteger(String s) {        try {            Integer.parseInt(s);        } catch (NumberFormatException | NullPointerException e) {            return false;        }        return true;    }}