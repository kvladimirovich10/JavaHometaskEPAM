package hometask2.task1;enum Type {BALLPOINT, ROLLERBALL, FOUNTAIN, FELTTIP}enum Color {BLUE, BLACK, RED, PINK, YELLOW, WHITE}enum Brand {DALSEY, LAMY, PARKER, WATERMAN, ACHE, SENATOR, DELTA, MARLEN, MANZONI, PELICAN, PIERRE_CARDIN, ROTRING}public class Pen {    private Type type;    private Color inkColor;    private double tipSize;    private Brand brand;    Pen(Type type, Color inkColor, double tipSize, Brand brand) {        this.type = type;        this.inkColor = inkColor;        this.tipSize = tipSize;        this.brand = brand;    }    @Override    public String toString() {        return "The pen of monufacturing of the company " + this.brand + ", "                + this.type + " with tip size of " + this.tipSize + ", " + this.inkColor + " ink color";    }    @Override    public boolean equals(Object o) {        if (this == o) return true;        if (o == null || getClass() != o.getClass()) return false;        Pen pen = (Pen) o;        if (Double.compare(pen.tipSize, tipSize) != 0) return false;        if (type != pen.type) return false;        if (inkColor != pen.inkColor) return false;        return brand == pen.brand;    }    @Override    public int hashCode() {        int result;        long temp;        result = type.hashCode();        result = 31 * result + inkColor.hashCode();        temp = Double.doubleToLongBits(tipSize);        result = 31 * result + (int) (temp ^ (temp >>> 32));        result = 31 * result + brand.hashCode();        return result;    }}