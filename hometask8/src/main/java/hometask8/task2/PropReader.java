package hometask8.task2;import java.io.BufferedReader;import java.io.FileReader;import java.io.IOException;import java.io.InputStreamReader;import java.nio.file.NoSuchFileException;import java.nio.file.Path;import java.nio.file.Paths;import java.util.*;class PropReader {    private static FileReader fileReader = null;    private static String propFileName = null;    private static volatile Path propFilePath = null;    private static Map<String, String> propertyMap = new HashMap<>();    synchronized static Map<String, String> craftPropMap() {        Map<String, String> propMap = new HashMap<>();        String resourceName = null;        System.out.println("* input correct resource file name:\n");        try (BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in))) {            resourceName = bufferedReader.readLine();            propMap = readPropFileToMap(resourceName);        } catch (NoSuchFileException e) {            System.out.println("* correct file name");            craftPropMap();        } catch (MissingResourceException e) {            System.out.println("* no such key.");            e.printStackTrace();        } catch (IOException e) {            e.printStackTrace();        }        return propMap;    }    private synchronized static Map<String, String> readPropFileToMap(String propFileName)            throws NoSuchFileException, MissingResourceException {        PropReader.propFilePath = Paths.get(propFileName);        ResourceBundle resourceBundle = ResourceBundle.getBundle(propFileName);        Enumeration<String> enumeration = resourceBundle.getKeys();        while (enumeration.hasMoreElements()) {            propertyMap.put(enumeration.nextElement(), resourceBundle.getString(enumeration.nextElement()));        }        return propertyMap;    }    public static FileReader getFileReader() {        return fileReader;    }    public static String getPropFileName() {        return propFileName;    }    public static Path getPropFilePath() {        return propFilePath;    }    public static Map<String, String> getPropertyMap() {        return propertyMap;    }}